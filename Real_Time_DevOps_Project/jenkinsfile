pipeline{
    agent any
    parameters{
        booleanParam(name: 'PLAN_TERRAFORM', defaultValue: false, description: 'Do you want to plan the terraform?')
        booleanParam(name: 'APPLY_TERRAFORM', defaultValue: false, description: 'Do you want to apply the terraform?')
        booleanParam(name: 'DESTROY_TERRAFORM', defaultValue: false, description: 'Do you want to destroy the terraform?')
    }
    stages{
        stage('Clone Repository'){
            steps{
                deleteDir()
                git branch: 'main', credentialsId: 'github', url: 'git@github.com:mashru020/python-mysql-db-proj-1.git'
                sh "ls -lart"
            }
        }

        stage('Terraform Init'){
            steps{
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId:'app_mashru']]){
                    dir('infra'){
                    sh 'echo "======================= Terraform Init ==========================="'
                    sh "terraform init"
                    }
                }
            }
        }

        stage('Terraform Plan'){
            steps{
                script{
                    if (params.PLAN_TERRAFORM){
                        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId:'app_mashru']]){
                            dir('infra'){
                                sh 'echo "======================= Terraform Plan ==========================="'
                                sh "terraform plan -out=plan.out"
                            }
                        }    
                    }
                }
            }
        }

        stage('Terraform Apply'){
            steps{
                script{
                    if (params.APPLY_TERRAFORM){
                        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId:'app_mashru']]){
                            dir('infra'){
                                sh 'echo "======================= Terraform Apply ==========================="'
                                sh "terraform apply -auto-approve plan.out"
                            }
                        }
                    }
                }
            }
        }
        stage('Terraform Destroy'){
            steps{
                script{
                    if (params.DESTROY_TERRAFORM){
                        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId:'app_mashru']]){
                         dir('infra'){
                            sh 'echo "======================= Terraform Destroy ==========================="'
                            sh "terraform destroy -auto-approve"
                         }
                        }
                    }
                }
            }
        
        }
        
    }
}
